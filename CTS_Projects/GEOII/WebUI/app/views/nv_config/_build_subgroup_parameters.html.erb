<%
elements = ''
prev_id = nil

if @subgroup_parameters != nil

	if @user_presence != nil && !@user_presence 
		readonly = true;
	else
		readonly = false
	end

	 @subgroup_parameters.each do |sgp| 
	 	if sgp[:input][0]!= nil 
	 		ucn_protected = sgp[:input][0][:isUCNProtected]
	 	else
	 		ucn_protected = 0
	 	end

	 	if ucn_protected != 0
	 		if readonly
	 			parameter_locked = true
	 		else
	 			parameter_locked = false
	 		end
	 	else
	 		parameter_locked = false
	 	end

	 	#this is only used for intial build for update it will not wrap it
	 	if !@update_nv_config
		 	id = sgp[:id]

		 	if prev_id != nil
		 		if prev_id != id 
		 			elements += '</div><div class="subgroup_parameters_'+id.to_s+'">'
		 			prev_id = id
		 		end
		 	else
		 		prev_id = id
		 		elements += '<div class="subgroup_parameters_'+id.to_s+'">'
		 	end
		end

		case sgp[:type]
	        when "int"
	        	id = sgp[:input][0][:ID]
	        	title = sgp[:input][0][:Name]
	        	locked = sgp[:input][0][:isLocked]
	        	value = sgp[:input][0][:Value]
	        	min = sgp[:input][0][:Min_Value]
	        	max = sgp[:input][0][:Max_Value]
	        	units = sgp[:input][0][:Units]
	        	inc = sgp[:input][0][:Increments]
	        	mask = sgp[:input][0][:Format_Mask]
	        	default_value = sgp[:input][0][:Default_Value]
	        	

	        	#if default is set
	        	if @default 
	        		value = default_value
	        	end

	        	if mask.split(':') != nil &&  mask.split(':')[0] == 'H'
	        		value = Float(Array(value).pack('V').unpack('I')[0]).to_i.to_s(16)
	        		numeric_only = ''
	        	else
	        		numeric_only = 'numeric_only'
	        	end

	        	elements += '<div class="nv_row"><div class="nv_title">'+title+(units.length > 0 ? ' ('+units+')': '')+'</div>'+build_utc_icon(ucn_protected)+'<div class="dv_input"><input id="int_'+id.to_s+'" value="'+value.to_s+'" class="'+(locked == 1 ? 'locked' : '')+(parameter_locked ? ' readonly': '')+' '+numeric_only+'" '+(locked == 1 || parameter_locked ? 'disabled' : '')+' min = "'+min.to_s+'" max = "'+max.to_s+'" inc="'+inc.to_s+'"  mask="'+mask+'" /></div>'+(locked == 1 ? '<div class="locked"></div>' : '')+'<div class="nv_error"></div></div>'

	        when "string"
				id = sgp[:input][0][:ID]
	        	title = sgp[:input][0][:Name]
	        	locked = sgp[:input][0][:isLocked]
	        	value = sgp[:input][0][:String]
	        	min = sgp[:input][0][:Min_Length]
	        	max = sgp[:input][0][:Max_Length]
	        	mask = sgp[:input][0][:Format_Mask]
	        	default_value = sgp[:input][0][:Default_String]
	        	
	        	#if default is set
	        	if @default 
	        		value = default_value
	        	end

	        	elements += '<div class="nv_row"><div class="nv_title">'+title+'</div>'+build_utc_icon(ucn_protected)+'<div class="dv_input"><input id="string_'+id.to_s+'" value="'+value+'" class="'+(locked == 1 ? 'locked' : '')+(parameter_locked ? ' readonly': '')+'" '+(locked == 1 || parameter_locked ? 'disabled' : '')+' min = "'+min.to_s+'" max = "'+max.to_s+'" mask="'+mask+'"/></div>'+(locked == 1 ? '<div class="locked"></div>' : '')+'<div class="nv_error"></div></div>'
			when "enum"
				id = sgp[:input][0][:ID]
				title = sgp[:input][0][:Name]
	        	locked = sgp[:input][0][:isLocked]
	        	value = sgp[:input][0][:Selected_Value_ID]
	        	default_value = sgp[:input][0][:Default_Value_ID]
	        	group_ID =  sgp[:group_ID]
	        	
	        	#if default is set
	        	if @default 
	        		value = default_value
	        	end

	        	select_tag = '<select id = "enum_'+id.to_s+'" group_ID="'+group_ID.to_s+'" class="'+(@subgroup_parameters_id[id] ? 'subgroup_anchor' : '')+(locked == 1 ? 'locked' : '')+(parameter_locked ? ' readonly': '')+'" '+(locked == 1 || parameter_locked ? 'disabled' : '')+'>'

	        	sgp[:selection].each do |sel|
	        		name = sel[:Name]
	        		option_id = sel[:ID]
	        		option_value = sel[:Value]

	        		select_tag += '<option value="'+option_id.to_s+'" '+(option_id == value ? 'selected' : '')+'>'+name +'</option>'
	        	end

	        	select_tag += '</select>'

	        	elements += '<div class="nv_row"><div class="nv_title">'+title+'</div>'+build_utc_icon(ucn_protected)+'<div class="dv_input">'+select_tag+'</div>'+(locked == 1 ? '<div class="locked"></div>' : '')+'<div class="nv_error"></div></div>'
	    
	        when "byte"
				id = sgp[:input][0][:ID]
				title = sgp[:input][0][:Name]
	        	locked = sgp[:input][0][:isLocked]
	        	value = sgp[:input][0][:Array_Value]
	        	default_value = sgp[:input][0][:Default_Value]
	        	size = sgp[:input][0][:Size].to_i * 2

	        	#if default is set
	        	if @default 
	        		value = default_value
	        	end

	        	elements += '<div class="nv_row"><div class="nv_title">'+title+'</div>'+build_utc_icon(ucn_protected)+'<div class="dv_input"><input id="byte_'+id.to_s+'" value="'+value.to_s+'" class="byte_parameter '+(locked == 1 ? 'locked' : '')+(parameter_locked ? ' readonly': '')+'" '+(locked == 1 || parameter_locked ? 'disabled' : '')+' size = "'+size.to_s+'"/></div>'+(locked == 1 ? '<div class="locked_icon"></div>' : '')+'<div class="nv_error"></div></div>'

	        when "blank"
	        		elements += '</div>'
	        		prev_id = nil
	    end


	end

	if @sscc_set
		elements += '<input type="hidden" value="true" class="sscc_flag"/>'
		elements += '<table class="sscc_tabs" cellspacing="0" border="0">'
		    elements += '<tbody>'
		        elements += '<tr>'    
		          elements += '<td class="sscc_tab sscc_tab_selected" start_index="150">'
		              elements += '<span>Vital Inputs</span>'
		          elements += '</td>'
		          elements += '<td class="sscc_tab sscc_tab_off" start_index="170">'
		              elements += '<span>Vital Outputs</span>'
		          elements += '</td>'
		          elements += '<td class="sscc_tab sscc_tab_off" start_index="190">'
		              elements += '<span>Non Vital Inputs</span>'
		          elements += '</td>'      
		          elements += '<td class="sscc_loading">'
		            elements += '<img src="/images/small_spinner.gif"/>'
		          elements += '</td>'
		    elements += '</tr>'
		    elements += '</tbody>'
		elements += '</table>'
		elements += '<div class="sscc_wrapper">'
		elements += render :partial=> "sscc_subgroup_view"
		elements += '</div>'
	end
	
	if !@update_nv_config && elements.length > 0 && prev_id != nil
		elements += '</div>'
	end
end

%><%=elements%>